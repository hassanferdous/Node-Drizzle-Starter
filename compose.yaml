services:
  backend:
    container_name: drizzle_express
    build: .
    ports:
      - ${PORT}:${PORT}
    volumes:
      - .:/app
      - /app/node_modules

    environment:
      - NODE_ENV=${NODE_ENV}
      - LOG_LEVEL=${LOG_LEVEL}
      - PORT=${PORT}
      - HASH_SALT=${HASH_SALT}
      - JWT_ACCESSTOKEN_SECRET=${JWT_ACCESSTOKEN_SECRET}
      - JWT_REFRESHTOKEN_SECRET=${JWT_REFRESHTOKEN_SECRET}
      - ACCESSTOKEN_DURATION=${ACCESSTOKEN_DURATION}
      - REFRESHTOKEN_DURATION=${REFRESHTOKEN_DURATION}
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      - AUTH_GOOGLE_CLIENT_ID=${AUTH_GOOGLE_CLIENT_ID}
      - AUTH_GOOGLE_CLIENT_SECRET=${AUTH_GOOGLE_CLIENT_SECRET}
      - SMTP_HOST=${SMTP_HOST}
      - SMTP_PORT=${SMTP_PORT}
      - SMTP_USER=${SMTP_USER}
      - SMTP_PASS=${SMTP_PASS}
      - SMTP_FROM=${SMTP_FROM}

    depends_on:
      - postgres
      - redis
    command: pnpm dev
    develop:
      watch:
        - action: sync
          path: ./src
          target: /app/src
          ignore:
            - node_modules/
        - action: rebuild
          path: package.json

  postgres:
    container_name: drizzle_postgres
    image: postgres:15-alpine
    restart: always
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
  redis:
    container_name: redis_cache
    image: redis:8-alpine
    ports:
      - "6379:6379"
volumes:
  pgdata:
